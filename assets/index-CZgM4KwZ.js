var k=(C,u,s)=>new Promise((r,l)=>{var m=t=>{try{i(s.next(t))}catch(n){l(n)}},d=t=>{try{i(s.throw(t))}catch(n){l(n)}},i=t=>t.done?r(t.value):Promise.resolve(t.value).then(m,d);i((s=s.apply(C,u)).next())});import{P as x}from"./index-DmvVZzf-.js";import{bm as b}from"./entry/index-C2yXXbfE-1713597257644.js";import{u as v}from"./index-OU5-Hpez.js";import{al as T,ak as y,Q as w,aT as g,j as _}from"./antd-D-XvgdAE.js";import{d as R,a9 as $,Z as B,a7 as E,a8 as e,k as a,u as o,G as f,$ as h}from"./vue-bWmcvXqU.js";import"./useContentViewHeight-ByP0kkZI.js";import"./useWindowSizeFn-rAoW7C_Y.js";import"./onMountedOrActivated-C5rGMWQz.js";const N=h("div",{class:"mt-4"}," 打开浏览器的 network 面板，可以看到发出了六次请求 ",-1),P=h("div",{class:"mt-4"}," 错误重试，retryInterval 如果不设置，默认采用简易的指数退避算法，取 1000 * 2 ** retryCount，也就是第一次重试等待 2s，第二次重试等待 4s，以此类推，如果大于 30s，则取 30s ",-1),W=R({__name:"index",setup(C){const u=()=>k(this,null,function*(){yield b()});function s(){return new Promise((n,c)=>{setTimeout(()=>{c(`TimeError: ${Date.now()}`)},1300)})}let r=0;const{loading:l,run:m,cancel:d}=v(s,{manual:!0,retryCount:5,onError(n){r===0&&(_.error("发现错误"),r++);const c=Date.now();_.error(`第 ${r++} 次重试, Time:${c}`)}}),i=()=>{r=0,m()},t=()=>{r=0,d(),_.info("已取消")};return(n,c)=>{const p=$("a-button");return B(),E(o(x),{title:"错误重试"},{default:e(()=>[a(o(T),{gutter:16},{default:e(()=>[a(o(y),{span:8},{default:e(()=>[a(o(w),{title:"Axios 错误重试"},{default:e(()=>[a(p,{onClick:u,type:"primary"},{default:e(()=>[f(" 点击会重新发起请求5次 ")]),_:1}),N]),_:1})]),_:1}),a(o(y),{span:8},{default:e(()=>[a(o(w),{title:"hooks 错误重试"},{default:e(()=>[a(o(g),null,{default:e(()=>[a(p,{onClick:i,type:"primary",disabled:o(l)},{default:e(()=>[f(" 使用 hooks 发起重试 ")]),_:1},8,["disabled"]),a(p,{onClick:t},{default:e(()=>[f("取消")]),_:1})]),_:1}),P]),_:1})]),_:1})]),_:1})]),_:1})}}});export{W as default};
